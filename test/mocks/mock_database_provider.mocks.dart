// Mocks generated by Mockito 5.4.4 from annotations
// in beta_app/test/mocks/mock_database_provider.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i8;

import 'package:beta_app/enums/common_enums.dart' as _i9;
import 'package:beta_app/models/common/result.dart' as _i3;
import 'package:beta_app/modules/database/models/data_record.dart' as _i7;
import 'package:beta_app/modules/database/providers/database_provider.dart'
    as _i4;
import 'package:beta_app/modules/logging/providers/i_logging_provider.dart'
    as _i2;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeILoggingProvider_0 extends _i1.SmartFake
    implements _i2.ILoggingProvider {
  _FakeILoggingProvider_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T> extends _i1.SmartFake implements _i3.Result<T> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseProvider extends _i1.Mock implements _i4.DatabaseProvider {
  MockDatabaseProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ILoggingProvider get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeILoggingProvider_0(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i2.ILoggingProvider);

  @override
  set onError(_i5.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  _i6.Stream<Map<String, _i7.DataRecord>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<Map<String, _i7.DataRecord>>.empty(),
      ) as _i6.Stream<Map<String, _i7.DataRecord>>);

  @override
  Map<String, _i7.DataRecord> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: <String, _i7.DataRecord>{},
      ) as Map<String, _i7.DataRecord>);

  @override
  set state(Map<String, _i7.DataRecord>? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, _i7.DataRecord> get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: <String, _i7.DataRecord>{},
      ) as Map<String, _i7.DataRecord>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> init({String? customDirectoryPath}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#customDirectoryPath: customDirectoryPath},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Result<String>> addRecord({
    required String? fileName,
    required DateTime? creationDate,
    _i8.Uint8List? binaryData,
    Map<String, dynamic>? data,
    required _i9.MeasurementType? measurementType,
    required _i9.DataFileType? fileType,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRecord,
          [],
          {
            #fileName: fileName,
            #creationDate: creationDate,
            #binaryData: binaryData,
            #data: data,
            #measurementType: measurementType,
            #fileType: fileType,
            #metadata: metadata,
          },
        ),
        returnValue: _i6.Future<_i3.Result<String>>.value(_FakeResult_1<String>(
          this,
          Invocation.method(
            #addRecord,
            [],
            {
              #fileName: fileName,
              #creationDate: creationDate,
              #binaryData: binaryData,
              #data: data,
              #measurementType: measurementType,
              #fileType: fileType,
              #metadata: metadata,
            },
          ),
        )),
      ) as _i6.Future<_i3.Result<String>>);

  @override
  _i3.Result<List<_i7.DataRecord>> getRecords({
    String? sessionType,
    Map<String, dynamic>? filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecords,
          [],
          {
            #sessionType: sessionType,
            #filter: filter,
          },
        ),
        returnValue: _FakeResult_1<List<_i7.DataRecord>>(
          this,
          Invocation.method(
            #getRecords,
            [],
            {
              #sessionType: sessionType,
              #filter: filter,
            },
          ),
        ),
      ) as _i3.Result<List<_i7.DataRecord>>);

  @override
  _i3.Result<_i8.Uint8List?> getRecordData(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecordData,
          [id],
        ),
        returnValue: _FakeResult_1<_i8.Uint8List?>(
          this,
          Invocation.method(
            #getRecordData,
            [id],
          ),
        ),
      ) as _i3.Result<_i8.Uint8List?>);

  @override
  _i3.Result<_i7.DataRecord> getRecord(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecord,
          [id],
        ),
        returnValue: _FakeResult_1<_i7.DataRecord>(
          this,
          Invocation.method(
            #getRecord,
            [id],
          ),
        ),
      ) as _i3.Result<_i7.DataRecord>);

  @override
  _i6.Future<_i3.Result<void>> updateRecordMetadata(
    String? id,
    Map<String, dynamic>? newMetadata,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRecordMetadata,
          [
            id,
            newMetadata,
          ],
        ),
        returnValue: _i6.Future<_i3.Result<void>>.value(_FakeResult_1<void>(
          this,
          Invocation.method(
            #updateRecordMetadata,
            [
              id,
              newMetadata,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Result<void>>);

  @override
  _i6.Future<_i3.Result<void>> deleteRecord(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteRecord,
          [id],
        ),
        returnValue: _i6.Future<_i3.Result<void>>.value(_FakeResult_1<void>(
          this,
          Invocation.method(
            #deleteRecord,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Result<void>>);

  @override
  _i6.Future<_i3.Result<void>> clearData() => (super.noSuchMethod(
        Invocation.method(
          #clearData,
          [],
        ),
        returnValue: _i6.Future<_i3.Result<void>>.value(_FakeResult_1<void>(
          this,
          Invocation.method(
            #clearData,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Result<void>>);

  @override
  _i6.Future<_i3.Result<String>> saveGraphFileMetadata({
    required String? filePath,
    required String? fileName,
    required DateTime? creationDate,
    required _i9.MeasurementType? measurementType,
    String? sessionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGraphFileMetadata,
          [],
          {
            #filePath: filePath,
            #fileName: fileName,
            #creationDate: creationDate,
            #measurementType: measurementType,
            #sessionId: sessionId,
          },
        ),
        returnValue: _i6.Future<_i3.Result<String>>.value(_FakeResult_1<String>(
          this,
          Invocation.method(
            #saveGraphFileMetadata,
            [],
            {
              #filePath: filePath,
              #fileName: fileName,
              #creationDate: creationDate,
              #measurementType: measurementType,
              #sessionId: sessionId,
            },
          ),
        )),
      ) as _i6.Future<_i3.Result<String>>);

  @override
  _i3.Result<List<_i7.DataRecord>> getRecordsBySession(String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecordsBySession,
          [sessionId],
        ),
        returnValue: _FakeResult_1<List<_i7.DataRecord>>(
          this,
          Invocation.method(
            #getRecordsBySession,
            [sessionId],
          ),
        ),
      ) as _i3.Result<List<_i7.DataRecord>>);

  @override
  _i6.Future<_i3.Result<void>> markRecordAsDeleted(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #markRecordAsDeleted,
          [id],
        ),
        returnValue: _i6.Future<_i3.Result<void>>.value(_FakeResult_1<void>(
          this,
          Invocation.method(
            #markRecordAsDeleted,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Result<void>>);

  @override
  bool updateShouldNotify(
    Map<String, _i7.DataRecord>? old,
    Map<String, _i7.DataRecord>? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i5.RemoveListener addListener(
    _i10.Listener<Map<String, _i7.DataRecord>>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
      ) as _i5.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
